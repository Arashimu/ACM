//树形dp
/*
虚树构图:
我们将所有关键点先按dfs序排序，然后开一个栈，表示当前点在原树中到根的路径上在虚树上的点，我们考虑从左到右加点，
假设当前加入的点为x，x与当前栈顶的公共祖先为y，那么很明显，
加入x后，原栈内深度大于y的点都会被踢出，而被删掉的点之间其实就对应了虚树中的连边，也就是说我们可以在点退栈时连边。
于是就建出一棵虚树。 
*/
